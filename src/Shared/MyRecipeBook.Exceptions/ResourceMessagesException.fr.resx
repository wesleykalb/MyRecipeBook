<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMAIL_ALREADY_REGISTERED" xml:space="preserve">
    <value>Email déjà enregistré.</value>
    <comment/>
  </data>
  <data name="EMAIL_EMPTY" xml:space="preserve">
    <value>l'e-mail ne peut pas être vide.</value>
    <comment/>
  </data>
  <data name="EMAIL_OR_PASSWORD_INVALID" xml:space="preserve">
    <value>E-mail ou mot de passe invalide.</value>
    <comment/>
  </data>
  <data name="INVALID_EMAIL" xml:space="preserve">
    <value>l'e-mail est-il invalide.</value>
    <comment/>
  </data>
  <data name="INVALID_PASSWORD" xml:space="preserve">
    <value>Le mot de passe doit comporter plus de 6 caractères.</value>
    <comment/>
  </data>
  <data name="NAME_EMPTY" xml:space="preserve">
    <value>Le nom ne peut pas étre vide.</value>
    <comment/>
  </data>
  <data name="UNKNOW_ERROR" xml:space="preserve">
    <value>Erreur inconnue.</value>
    <comment/>
  </data>
  <data name="NO_TOKEN" xml:space="preserve">
    <value> jeton d'autorisation introuvable.</value>
    <comment/>
  </data>
  <data name="USER_WITHOUT_PERMISSION_RESOURCE" xml:space="preserve">
    <value>l'utilisateur n'a pas l'autorisation d'accéder à cette ressource.</value>
    <comment/>
  </data>
  <data name="PASSWORD_EMPTY" xml:space="preserve">
    <value>Le mot de passe ne peut pas être vide.</value>
    <comment/>
  </data>
  <data name="INVALID_PASSWORD_ERROR" xml:space="preserve">
    <value>Mot de passe invalide.</value>
    <comment/>
  </data>
  <data name="RECIPE_TITLE_EMPTY" xml:space="preserve">
    <value>Titre de recette vide.</value>
    <comment/>
  </data>
  <data name="COOKING_TIME_NOT_SUPPORTED" xml:space="preserve">
    <value>Temps de cuisson non pris en charge.</value>
    <comment/>
  </data>
  <data name="DIFFICULT_LEVEL_NOT_SUPPORTED" xml:space="preserve">
    <value>Niveau difficile non pris en charge.</value>
    <comment/>
  </data>
  <data name="AT_LEAST_ONE_INGREDIENT" xml:space="preserve">
    <value>Vous devez soumettre au moins un ingrédient.</value>
    <comment/>
  </data>
  <data name="AT_LEAST_ONE_INSTRUCTION" xml:space="preserve">
    <value> Il est nécessaire d'envoyer au moins une instruction.</value>
    <comment/>
  </data>
  <data name="DISH_TYPE_NOT_SUPPORTED" xml:space="preserve">
    <value>Type de plat non pris en charge.</value>
    <comment/>
  </data>
  <data name="INGREDIENT_EMPTY" xml:space="preserve">
    <value>Ingrédient vide.</value>
    <comment/>
  </data>
  <data name="NON_NEGATIVE_INSTRUCTION_STEP" xml:space="preserve">
    <value>Impossible d'envoyer une étape d'instruction négative.</value>
    <comment/>
  </data>
  <data name="INSTRUCTION_EMPTY" xml:space="preserve">
    <value>Instruction vide.</value>
    <comment/>
  </data>
  <data name="INSTRUCTION_EXCEEDS_LIMIT_CHARACTERS" xml:space="preserve">
    <value>I'instruction dépasse la limite de caractères.</value>
    <comment/>
  </data>
  <data name="TWO_OR_MORE_INSTRUCTIONS_SAME_ORDER" xml:space="preserve">
    <value>Deux instructions ou plus ont le même ordre.</value>
    <comment/>
  </data>
  <data name="RECIPE_NOT_FOUND" xml:space="preserve">
    <value>Recette introuvable.</value>
    <comment/>
  </data>
  <data name="INVALID_NUMBER_INGREDIENTS" xml:space="preserve">
    <value>Nombre d'ingrédients invalide, la liste doit contenir entre 1 et 5 ingrédients.</value>
    <comment/>
  </data>
  <data name="DUPLICATED_INGREDIENTS_IN_LIST" xml:space="preserve">
    <value>Il y a des ingrédients en double dans la liste.</value>
    <comment/>
  </data>
  <data name="INGREDIENT_NOT_FOLLOWING_PATTERN" xml:space="preserve">
    <value>sl'ingrédient ne suit pas le modèle d'écriture.</value>
    <comment/>
  </data>
  <data name="ONLY_IMAGES_ACCEPTED" xml:space="preserve">
    <value>Seules les images (png, jpg, jpeg) sont acceptées.</value>
    <comment/>
  </data>
</root>